Blogging with AsciiDoc
======================

//
// My blog post announcing blogpost.
//

I make lots of notes using
http://www.methods.co.nz/asciidoc/[AsciiDoc], the sort of stuff that's
to minor and/or not rigorous enough for formal publication, but
possibly useful to others.

So I decided it was about time I started posting my notes to a blog.
Creating and maintaining posts using the normal browser based
interfaces was not an option -- just to tedious for words.  So I
looked around for an HTML friendly blog host that could make a
reasonable job of rendering AsciiDoc generated HTML.

After a search (albeit brief) I settled on
http://wordpress.com[Wordpress.com]. There is a problem though:
Wordpress massages HTML pasted into the Wordpress HTML editor.  Here
are some rendering problems I observed after pasting
AsciiDoc-generated HTML into Wordpress:

- Paragraph tags are stripped and `<br />` tags inserted at line
  breaks.
- Break tags inserted preceeding inline tags.
- Tables problems because Wordpress seems to insist on the opening
  'table' tag occupying a single line.
- 'Emoticons' seem to be auto-generated.

These problems could be solved by installing the
http://wordpress.org/extend/plugins/wp-unformatted/[WP Unformatted]
Wordpress plugin -- unfortunately wordpress.com dosn't allow plugins, in
any case blog editing by pasting into the browser is still tedious.
Submitting the unmodified HTML via the
http://codex.wordpress.org/XML-RPC_Support[Wordpress API] doesn't get
round these problems either.

My solution was to write 'blogpost', a Wordpress command-line weblog
client for AsciiDoc. 'blogpost' allows you to create, list, delete and
update blogs written in AsciiDoc from the command-line. Here are some
usage examples:

---------------------------------------------------------------------
$ blogpost.py create doc/blogging_with_asciidoc.txt
creating published post 'Blogging with AsciiDoc'...
id: 38

$ blogpost.py list
38: Thu May 15 22:36:47 2008: Blogging with AsciiDoc

$ blogpost.py update 38 doc/blogging_with_asciidoc.txt
updating published post 'Blogging with AsciiDoc'...
id: 38
url: http://srackham.wordpress.com/2008/05/38/blogging-with-asciidoc/

$ blogpost.py delete 38
deleting post 38...
---------------------------------------------------------------------

I have used 'blogpost' to post the http://TODO/[AsciiDoc User Guide], a
long (aroung 100 page) and fairly complicated AsciiDoc document.

To get AsciiDoc output into a Wordpress compatible format:

1. I've written an AsciiDoc `wordpress.conf` configuration file which
   implements a 'wordpress' backend -- all it contains is a few minor
   adjustments to the existing AsciiDoc 'html4' backend.
2. 'blogpost' runs AsciiDoc with the `--backend wordpress
   --no-header-footer` options.
3. 'blogpost' then captures the HTML output from AsciiDoc and removes
   all extraneous line breaks -- the HTML is now Wordpress friendly.

See also:

- http://TODO[blogpost man page]
- http://TODO[blogpost README]
- http://hg.sharesource.org/blogpost/[blogpost Mercurial repository at
  ShareSource].

'blogpost' uses the http://www.blackbirdblog.it/programmazione/progetti/28[Python
Wordpress library] to communicate with the Wordpress XML-RPC API.
