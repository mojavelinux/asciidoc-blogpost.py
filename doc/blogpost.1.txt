BLOGPOST(1)
===========
Stuart Rackham <srackham@methods.co.nz>


NAME
----
blogpost - Wordpress weblog client for AsciiDoc


SYNOPSIS
--------
*blogpost* ['OPTIONS'] 'COMMAND' ['POST_ID'] ['BLOG_FILE']


DESCRIPTION
-----------
A Wordpress command-line weblog client for AsciiDoc.  Creates and
updates weblog entries directly from AsciiDoc source documents. You
can also delete and list weblog entries from the command-line.


COMMANDS
--------
*c, create*::
  Create a new weblog post using the contents of 'BLOG_FILE'.

*d, delete*::
  Delete weblog post with ID number 'POST_ID'.  If 'POST_ID' is '.'
  then delete the most recent post.

*l, list*::
  List recent weblog posts.

*u, update*::
  Update existing weblog post with ID number 'POST_ID' using the
  contents of 'BLOG_FILE'. If 'POST_ID' is '.' then update the most
  recent post.


OPTIONS
-------
*--version*::
  Show program's version number and exit.

*-h, --help*::
  Show this help message and exit.

*-f, --conf-file*='CONF_FILE'::
  Use configuration file 'CONF_FILE'. This file is read after the
  (optional) implicit '$HOME/.blogpost' configuration file.

*-u, --unpublish*::
  Set weblog post status to 'unpublished'. If this option is omitted the
  post publication status is set to 'published'.
  Applicable to 'create' and 'update' commands.

*--html*::
  'BLOG_FILE' is a Wordpress compatible HTML file. The default
  behavior is to assume the 'BLOG_FILE' is an AsciiDoc file.
  Applicable to 'create' and 'update' commands.

*-p, --pages*::
  Apply 'COMMAND' to weblog 'Pages' rather than normal weblog 'Posts'.

*-I, --no-images*::
  Do not upload 'BLOG_FILE' images.

*-r, --reset-cache*::
  Delete the document images cache file prior to processing -- this
  ensures all images will be uploaded irrespective of whether or not
  they were previously uploaded.

*-t, --title*='TITLE'::
  Set the weblog post title
  If this option is omitted the title will be read from the
  AsciiDoc 'BLOG_FILE'.
  Applicable to 'create' and 'update' commands.

*-d, --doctype*='DOCTYPE'::
  AsciiDoc document type: 'article', 'book' or 'manpage'. Default
  document type is 'article'.

*-n, --dry-run*::
  Simulate command execution without doing anything, instead report
  what would have been done.

*-v, --verbose*::
  Print more information about the actions being performed to
  'stdout'. Combine this option with '--dry-run' to view the uploaded
  HTML.


EXAMPLES
--------
Create, list, update and delete a weblog post:

  blogpost.py create doc/blogging_with_asciidoc.txt
  blogpost.py list
  blogpost.py update 29 doc/blogging_with_asciidoc.txt
  blogpost.py delete 29


IMAGE CACHING
-------------
You can upload images to the WordPress server using XML-RPC but there
is currently no way to list or delete images stored on the server
using XML-RPC. This leaves us with a bit of a problem -- if we want to
upload and update document images automatically when we update a post
we have no way of asking the server whether or not the images have
been previously uploaded -- new copies of the images will be created
on the server every time the document is updated. Clearly this is not
ideal.

'blogpost' relsolves this problem with client-side caching --
information about previously uploaded images (soure paths, server URLs
and image file MD5 checksums) are stored in per-document cache files.
Cache files are stored alongside the source 'BLOG_FILE' but with
'.blogpost-cache' file name extensions.

'blogpost' uses document image cache files to ensure only new or
modified image files are uploaded to the WordPress server.

Because the caching is per-document images are not shared between
documents.


RESOURCES
---------
Project repository: http://hg.sharesource.org/blogpost/[]

Python Wordpress library: http://www.blackbirdblog.it/programmazione/progetti/28[]

AsciiDoc: http://www.methods.co.nz/asciidoc/[]


AUTHOR
------
Written by Stuart Rackham, <mailto:srackham@methods.co.nz[]>


COPYING
-------
Copyright \(C) 2008 Stuart Rackham. Free use of this software is
granted under the terms of the MIT License.

